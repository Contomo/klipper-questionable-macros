# should be pretty self explanatory.
# backs up your save variables file to the entered path every 24 hours, if file contents have changed.

[gcode_macro SVF_BACKUP]
variable_path: "~/printer_data/backup/save_variables_backup"
variable_min_hours_for_backup: 24
gcode:
    {% set import = printer.printer.__class__.__init__.__globals__.importlib.import_module %}
    {% set time   = import('time') %}
    {% set os     = import('os') %}
    {% set glob   = import('glob') %}
    {% set pathlib= import('pathlib') %}
    {% set sv    = printer.printer.lookup_object('save_variables', none) %}
    {% if sv is not none %}
        UPDATE_DELAYED_GCODE ID=_SVF_BACKUP DURATION={4*60*60}
        {% set orig     = sv.filename %}
        {% set orig_abs = os.path.expanduser(orig) %}
        {% set defaultp = os.path.dirname(orig_abs) %}
        {% set basep    = path if path|length else defaultp %}
        {% set absdir   = os.path.realpath(os.path.expanduser(basep)) %}

        {% if not os.path.isdir(absdir) %}
            {% set _ = os.makedirs(absdir) %}{% endif %}

        {% set files = glob.glob(absdir ~ '/svf-backup_*.cfg')|sort %}
        {% set latest  = None %}
        {% set last_ts = 0 %}
        {% if files|length %}
            {% set latest  = files|last %}
            {% set stamp   = latest.rsplit('/',1)[1][11:-4] %}
            {% set last_ts = time.mktime(time.strptime(stamp, '%Y-%m-%d_%H%M'))|int %}{% endif %}

        {% set now_ts = time.time()|int %}
        {% if latest is none or (now_ts - last_ts) >= min_hours_for_backup|int(24)*60*60 %}
            {% set curr_txt = pathlib.Path(orig).read_text() %}
            {% set prev_txt = pathlib.Path(latest).read_text() if latest is not none else '' %}
            {% if latest is none or curr_txt != prev_txt %}
                {% set ts   = time.strftime('%Y-%m-%d_%H%M', time.localtime(now_ts)) %}
                {% set dest = absdir ~ '/svf-backup_' ~ ts ~ '.cfg' %}
                {% set _    = pathlib.Path(dest).write_text(curr_txt) %}
                RESPOND MSG="[SVF_BACKUP] wrote backup '{dest}'"    
            {% endif %}
        {% endif %}
    {% endif %}

[delayed_gcode _SVF_BACKUP]
initial_duration: 1
gcode:
    SVF_BACKUP
